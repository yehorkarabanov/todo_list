version: "3.9"

services:
  redis:
    image: redis:7.4.0-alpine
    expose:
      - 6379

  backend-api:
    depends_on:
      - redis
    expose:
      - 8080
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/code
    command: uvicorn main:app --host 0.0.0.0 --port 8080 --reload --proxy-headers

  celery_worker:
    container_name: celery_worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery --app app.celery.worker worker --loglevel=info --uid=nobody  --gid=nogroup
    volumes:
      - ./backend/:/code
    depends_on:
      - backend-api
      - redis

  flower:
    container_name: flower
    expose:
      - 5555
    environment:
      - CELERY_BROKER_URL=redis://redis/0
      - CELERY_RESULT_BACKEND=redis://redis/0
    depends_on:
      - backend-api
      - celery_worker
      - redis
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery --broker=redis://redis/0 flower --port=5555 --url-prefix=/flower

  nginx:
    image: nginx:latest
    volumes:
      - ./proxy/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./proxy/nginx/certs/server.crt:/etc/nginx/server.crt
      - ./proxy/nginx/certs/server.key:/etc/nginx/server.key
    depends_on:
      - backend-api
      - flower
    ports:
      - "80:80"
      - "443:443"

#  nginx:
#    container_name: "nginx"
#    image: nginx:1.27.1-alpine
#    depends_on:
#      - backend-api
#      - flower
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - .proxy/nginx:/etc/nginx/conf.d
#      - .proxy/certbot/conf:etc/letsencrypt
#      - .proxy/certbot/www:/var/www/certbot

#  certbot:
#    image: certbot/certbot:latest
#    volumes:
#      - .proxy/certbot/conf:etc/letsencrypt
#      - .proxy/certbot/www:/var/www/certbot
